0 IS=10:DEPTH=0:GRAPHICS 2:? "AoC 2016 Day 11. Part 1/2?":OPEN #1,4,0,"K:":GET #1,A:IF A<49 OR A>50 THEN RUN
1 ? CHR$(A):E=0:DSTARTP=0:IF A=49 THEN DIM Q$(3),S$(10),S2$(10),F$(10):S$="0012121212":F$="3333333333":SQ=3:GOTO 3
2 DIM Q$(4),S$(14),S2$(14),F$(14):S$="00000012121212":SQ=4:F$="33333333333333":IS=14
3 FOR A=1 TO IS:F$(A,A)=CHR$(3):S$(A,A)=CHR$(ASC(S$(A))-48):NEXT A:SQUASH=30:ADDHIST=45:SEARCH=85
4 TAILP=0:GOSUB SQUASH:GOSUB ADDHIST:DENDP=SQ:UNSQUASH=36:MOVE2=60:MOVE1=66:SORT=77:SAFE=71:TRAP 7
5 OPEN #2,4,0,"H:SEARCH.XEX":FOR A=1 TO 6:GET #2,B:NEXT A:A=0:GOSUB 15
6 GET #2,B:POKE 1536+A,B:A=A+1:GOTO 6
7 ? "Show Display? (SLOW) - Y/N";:GET #1,A:IF A<>89 AND A<>78 THEN GOTO 7
8 CLOSE #1:CLOSE #2:? :? :? :GRPH=1:IF A=78 THEN GRPH=0:POKE 559,0
9 FOR DPOS=DSTARTP TO DENDP-1 STEP SQ:GOSUB UNSQUASH:DIR=1
10 IF E<>3 THEN GOSUB MOVE2:IF  NOT SUCCESS THEN GOSUB MOVE1
11 BASE=3:FOR J=1 TO IS:IF ASC(S$(J))<BASE THEN BASE=ASC(S$(J))
12 NEXT J:DIR=-1:IF E>BASE THEN GOSUB MOVE1:IF  NOT SUCCESS THEN GOSUB MOVE2
13 ON GRPH=1 GOSUB 17:NEXT DPOS:DEPTH=DEPTH+1:DSTARTP=DENDP
14 DENDP=TAILP:GOTO 9
15 POSITION 0,0:? #6;"steps taken:";:POSITION 0,1:? #6;"  hist size:";:POSITION 0,2:? #6;" time taken:"
16 POKE 18,0:POKE 19,0:POKE 20,0:FOR I=5 TO 8:POSITION 0,I:? #6;9-I:NEXT I:RETURN
17 POSITION 13,0:? #6;DEPTH:POSITION 13,1:? #6;TAILP:TIME=INT((PEEK(18)*65536+PEEK(19)*256+PEEK(20))/60)
18 POSITION 13,2:? #6;TIME:POKE 77,0:FOR I=5 TO 8:POSITION 2,I:IF E=8-I THEN ? #6;CHR$(229):GOTO 20
19 ? #6;" "
20 NEXT I:FOR I=1 TO LEN(S$):G=(INT(I/2)+49):IF INT(I/2)=I/2 THEN G=G+224
21 FOR J=5 TO 8:POSITION 3+I,J:IF ASC(S$(I))=8-J THEN ? #6;CHR$(G):GOTO 23
22 ? #6;" "
23 NEXT J:NEXT I:RETURN
30 REM SQUASH (S$,E) INTO 3 OR 4 BYTES OF Q$
31 Q$(1)=CHR$(E+(4*ASC(S$(1)))+(16*ASC(S$(2)))+(64*ASC(S$(3))))
32 Q$(2)=CHR$(ASC(S$(4))+(4*ASC(S$(5)))+(16*ASC(S$(6)))+(64*ASC(S$(7))))
33 Q$(3)=CHR$(ASC(S$(8))+(4*ASC(S$(9)))+(16*ASC(S$(10)))):ON SQ=3 GOTO 35
34 Q$(4)=CHR$(ASC(S$(11))+(4*ASC(S$(12)))+(16*ASC(S$(13)))+(64*ASC(S$(14))))
35 RETURN :REM NEXT UNSQUASH FROM MEMORY INTO (E,S$)
36 Q1=PEEK(16384+DPOS):E=Q1-(4*INT(Q1/4)):Q1=INT(Q1/4):S$(1)=CHR$(Q1-(4*INT(Q1/4)))
37 Q1=INT(Q1/4):S$(2)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4):S$(3)=CHR$(Q1-(4*INT(Q1/4))):Q1=PEEK(16385+DPOS)
38 S$(4)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4):S$(5)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4):S$(6)=CHR$(Q1-(4*INT(Q1/4)))
39 Q1=INT(Q1/4):S$(7)=CHR$(Q1):Q1=PEEK(16386+DPOS):S$(8)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4)
40 S$(9)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4):S$(10)=CHR$(Q1-(4*INT(Q1/4))):ON SQ=3 GOTO 43
41 Q1=PEEK(16387+DPOS):S$(11)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4):S$(12)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4)
42 S$(13)=CHR$(Q1-(4*INT(Q1/4))):Q1=INT(Q1/4):S$(14)=CHR$(Q1-(4*INT(Q1/4)))
43 RETURN
45 REM ADD Q$ STATE TO HISTORY
46 POKE 16384+TAILP,ASC(Q$(1)):POKE 16385+TAILP,ASC(Q$(2)):POKE 16386+TAILP,ASC(Q$(3))
47 TAILP=TAILP+3:IF SQ=4 THEN POKE 16384+TAILP,ASC(Q$(4)):TAILP=TAILP+1
48 RETURN
50 REM SEARCH HISTORY FOR Q$.
51 FOUND=0:FOR POS=16384 TO 16383+TAILP STEP SQ:ON ASC(Q$(1))<>PEEK(POS) OR ASC(Q$(2))<>PEEK(POS+1) GOTO 54
52 ON ASC(Q$(3))<>PEEK(POS+2) GOTO 54:IF SQ=3 THEN POP :FOUND=1:GOTO 55
53 ON ASC(Q$(4))<>PEEK(POS+3) GOTO 54:POP :FOUND=1:GOTO 55
54 NEXT POS
55 RETURN
60 REM TRY TO MOVE 2 ITEMS
61 SUCCESS=0:S2$=S$:FOR A=1 TO IS-1:FOR B=A+1 TO IS:IF S$(A,A)<>S$(B,B) OR S$(A,A)<>CHR$(E) THEN 65
62 E=E+DIR:S$(A,A)=CHR$(ASC(S$(A))+DIR):S$(B,B)=CHR$(ASC(S$(B))+DIR):IF S$=F$ THEN 99
63 GOSUB SAFE:IF OK THEN GOSUB SORT:GOSUB SQUASH:GOSUB SEARCH:ON  NOT FOUND GOSUB ADDHIST:SUCCESS=1
64 E=E-DIR:S$=S2$
65 NEXT B:NEXT A:RETURN :REM MOVE 0 NEXT.
66 SUCCESS=0:S2$=S$:FOR A=1 TO IS:IF S$(A,A)<>CHR$(E) THEN 70
67 E=E+DIR:S$(A,A)=CHR$(ASC(S$(A))+DIR):IF S$=F$ THEN 99
68 GOSUB SAFE:IF OK THEN GOSUB SORT:GOSUB SQUASH:GOSUB SEARCH:ON  NOT FOUND GOSUB ADDHIST:SUCCESS=1
69 E=E-DIR:S$=S2$
70 NEXT A:RETURN
71 REM IS IT SAFE?
72 OK=0:FOR I=2 TO IS STEP 2:ON S$(I,I)=S$(I-1,I-1) GOTO 75:FOR J=2 TO IS STEP 2
73 IF I<>J AND S$(I,I)=S$(J-1,J-1) THEN POP :POP :GOTO 76
74 NEXT J
75 NEXT I:OK=1
76 RETURN
77 REM SORT INTO PREDICTABLE ORDER
78 FOR I=1 TO IS-2 STEP 2:BEST=I:FOR J=I+2 TO IS STEP 2
79 IF ASC(S$(J))<ASC(S$(BEST)) THEN BEST=J:GOTO 81
80 IF S$(J,J)=S$(BEST,BEST) AND ASC(S$(J+1))<=ASC(S$(BEST+1)) THEN BEST=J
81 NEXT J:IF BEST=I THEN GOTO 84
82 SWAP=ASC(S$(I)):S$(I,I)=S$(BEST,BEST):S$(BEST,BEST)=CHR$(SWAP)
83 SWAP=ASC(S$(I+1)):S$(I+1,I+1)=S$(BEST+1,BEST+1):S$(BEST+1,BEST+1)=CHR$(SWAP)
84 NEXT I:RETURN
85 REM MC_SEARCH
86 POKE 203,ASC(Q$(1)):POKE 204,ASC(Q$(2)):POKE 205,ASC(Q$(3)):IF SQ=4 THEN POKE 206,ASC(Q$(4))
87 FOUND=USR(1536,SQ,TAILP+16384):RETURN
99 DEPTH=DEPTH+1:GOSUB 17:POKE 559,62:? "SOLVED IN ";DEPTH:END
